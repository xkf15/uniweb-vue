{"version":3,"sources":["../../../src/js/Stars.js"],"names":["Stars","ctx","width","height","amount","stars","getStars","push","x","Math","random","y","r","save","fillStyle","forEach","beginPath","arc","star","PI","fill","restore","map","sign"],"mappings":";;;;;;;;;;;;;;;;IAAqBA,K;AACjB,mBAAYC,GAAZ,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwC;AAAA;;AACpC,aAAKH,GAAL,GAAWA,GAAX;AACA,aAAKC,KAAL,GAAaA,KAAb;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKE,KAAL,GAAa,KAAKC,QAAL,CAAcF,MAAd,CAAb;AACH;;;;iCAEQA,M,EAAQ;AACb,gBAAIC,QAAQ,EAAZ;AACA,mBAAOD,QAAP,EAAiB;AACbC,sBAAME,IAAN,CAAW;AACPC,uBAAGC,KAAKC,MAAL,KAAgB,KAAKR,KADjB;AAEPS,uBAAGF,KAAKC,MAAL,KAAgB,KAAKP,MAFjB;AAGPS,uBAAGH,KAAKC,MAAL,KAAgB;AAHZ,iBAAX;AAKH;AACD,mBAAOL,KAAP;AACH;;;+BAEM;AACH,gBAAIJ,MAAM,KAAKA,GAAf;AACAA,gBAAIY,IAAJ;AACAZ,gBAAIa,SAAJ,GAAgB,OAAhB;AACA,iBAAKT,KAAL,CAAWU,OAAX,CAAmB,gBAAO;AACtBd,oBAAIe,SAAJ;AACAf,oBAAIgB,GAAJ,CAAQC,KAAKV,CAAb,EAAgBU,KAAKP,CAArB,EAAwBO,KAAKN,CAA7B,EAAgC,CAAhC,EAAmC,IAAIH,KAAKU,EAA5C;AACAlB,oBAAImB,IAAJ;AACH,aAJD;AAKAnB,gBAAIoB,OAAJ;AACH;;;gCAGO;AACJ,iBAAKhB,KAAL,GAAa,KAAKA,KAAL,CAAWiB,GAAX,CAAe,gBAAO;AAC/B,oBAAIC,OAAOd,KAAKC,MAAL,KAAgB,GAAhB,GAAsB,CAAtB,GAA0B,CAAC,CAAtC;AACAQ,qBAAKN,CAAL,IAAUW,OAAO,GAAjB;AACA,oBAAIL,KAAKN,CAAL,GAAS,CAAb,EAAgB;AACZM,yBAAKN,CAAL,GAAS,CAACM,KAAKN,CAAf;AACH,iBAFD,MAEO,IAAIM,KAAKN,CAAL,GAAS,CAAb,EAAgB;AACnBM,yBAAKN,CAAL,IAAU,GAAV;AACH;AACD,uBAAOM,IAAP;AACH,aATY,CAAb;AAWH;;;;;kBA7CgBlB,K","file":"Stars.js","sourcesContent":["export default class Stars {\n    constructor(ctx, width, height, amount) {\n        this.ctx = ctx\n        this.width = width\n        this.height = height\n        this.stars = this.getStars(amount)\n    }\n\n    getStars(amount) {\n        let stars = []\n        while (amount--) {\n            stars.push({\n                x: Math.random() * this.width,\n                y: Math.random() * this.height,\n                r: Math.random() + 0.2\n            })\n        }\n        return stars\n    }\n\n    draw() {\n        let ctx = this.ctx\n        ctx.save()\n        ctx.fillStyle = 'white'\n        this.stars.forEach(star=> {\n            ctx.beginPath()\n            ctx.arc(star.x, star.y, star.r, 0, 2 * Math.PI)\n            ctx.fill()\n        })\n        ctx.restore()\n    }\n\n    //闪烁，星星半径每隔10帧随机变大或变小\n    blink() {\n        this.stars = this.stars.map(star=> {\n            let sign = Math.random() > 0.5 ? 1 : -1\n            star.r += sign * 0.2\n            if (star.r < 0) {\n                star.r = -star.r\n            } else if (star.r > 1) {\n                star.r -= 0.2\n            }\n            return star\n        })\n\n    }\n}"]}